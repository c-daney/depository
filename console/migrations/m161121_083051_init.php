<?php

use yii\db\Migration;

class m161121_083051_init extends Migration
{
    public function up()
    {

//-- CREATE SCHEMA `depository` DEFAULT CHARACTER SET utf8;
//-- grant all privileges on depository.* to depository@localhost identified by 'depository';

        $sql = <<<EOF

-- MySQL Script generated by MySQL Workbench
-- Mon Nov 21 18:22:29 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema depository
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `channel` (
  `channel_id` INT NOT NULL AUTO_INCREMENT COMMENT '自增id',
  `channel_key` VARCHAR(64) NOT NULL COMMENT 'key',
  `channel_secret` VARCHAR(64) NOT NULL COMMENT '密钥',
  `channel_name` VARCHAR(255) NOT NULL COMMENT '渠道名称',
  `channel_created_at` DATETIME NOT NULL DEFAULT '1000-01-01 00:00:00' COMMENT '创建时间',
  `channel_updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`channel_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `account` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `account_channel_id` INT NOT NULL,
  `account_key` VARCHAR(64) NOT NULL,
  `account_type` TINYINT NOT NULL DEFAULT 1,
  `account_status` TINYINT NOT NULL DEFAULT 1,
  `account_amount` DECIMAL(18,2) NOT NULL DEFAULT 0,
  `account_freeze_amount` DECIMAL(18,2) NULL DEFAULT 0,
  `account_created_at` DATETIME NOT NULL DEFAULT '1000-01-01 00:00:00',
  `account_updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`account_id`),
  INDEX `fk_account_channel_idx` (`account_channel_id` ASC),
  UNIQUE INDEX `key` (`account_channel_id` ASC, `account_key` ASC),
  CONSTRAINT `fk_account_channel`
    FOREIGN KEY (`account_channel_id`)
    REFERENCES `channel` (`channel_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `operation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `operation` (
  `operation_id` INT NOT NULL AUTO_INCREMENT,
  `operation_channel_id` INT NOT NULL,
  `operation_serial_num` VARCHAR(64) NOT NULL,
  `operation_type` TINYINT NOT NULL COMMENT '1:充值2:提现3:转账4:退款5:红包',
  `operation_status` TINYINT NOT NULL DEFAULT 1 COMMENT '1:接收2:处理中3:完成4:失败',
  `operation_snapshot` TEXT NOT NULL,
  `operation_message` VARCHAR(255) NULL,
  `operation_created_at` DATETIME NOT NULL DEFAULT '1000-01-01 00:00:00',
  `operation_finished_at` DATETIME NULL,
  `operation_updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`operation_id`),
  INDEX `fk_operation_channel1_idx` (`operation_channel_id` ASC),
  UNIQUE INDEX `operation_serial_num_UNIQUE` (`operation_channel_id` ASC, `operation_serial_num` ASC),
  CONSTRAINT `fk_operation_channel1`
    FOREIGN KEY (`operation_channel_id`)
    REFERENCES `channel` (`channel_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `account_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `account_log` (
  `account_log_id` INT NOT NULL AUTO_INCREMENT,
  `account_log_account_id` INT NOT NULL,
  `account_log_operation_id` INT NOT NULL,
  `account_log_type` TINYINT NOT NULL DEFAULT 1,
  `account_log_amount` DECIMAL(18,2) NOT NULL,
  `account_log_original_amount` DECIMAL(18,2) NULL,
  `account_log_changed_amount` DECIMAL(18,2) NULL,
  `account_log_created_at` DATETIME NOT NULL DEFAULT '1000-01-01 00:00:00',
  `account_log_updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`account_log_id`),
  INDEX `fk_account_log_account1_idx` (`account_log_account_id` ASC),
  INDEX `fk_account_log_operation1_idx` (`account_log_operation_id` ASC),
  CONSTRAINT `fk_account_log_account1`
    FOREIGN KEY (`account_log_account_id`)
    REFERENCES `account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_account_log_operation1`
    FOREIGN KEY (`account_log_operation_id`)
    REFERENCES `operation` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bank`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bank` (
  `bank_id` INT NOT NULL AUTO_INCREMENT,
  `bank_num` VARCHAR(16) NOT NULL,
  `bank_name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`bank_id`),
  UNIQUE INDEX `bank_num_UNIQUE` (`bank_num` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `card` (
  `card_id` INT NOT NULL AUTO_INCREMENT,
  `card_account_id` INT NOT NULL,
  `card_bank_id` INT NOT NULL,
  `card_num` VARCHAR(32) NOT NULL,
  `card_name` VARCHAR(32) NOT NULL,
  `card_id_num` VARCHAR(45) NOT NULL,
  `card_mobile` VARCHAR(45) NOT NULL,
  `card_status` TINYINT NOT NULL DEFAULT 1,
  `card_created_at` DATETIME NOT NULL DEFAULT '1000-01-01 00:00:00',
  `card_updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`card_id`),
  INDEX `fk_card_bank1_idx` (`card_bank_id` ASC),
  INDEX `fk_card_account1_idx` (`card_account_id` ASC),
  UNIQUE INDEX `num` (`card_account_id` ASC, `card_num` ASC),
  CONSTRAINT `fk_card_bank1`
    FOREIGN KEY (`card_bank_id`)
    REFERENCES `bank` (`bank_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_card_account1`
    FOREIGN KEY (`card_account_id`)
    REFERENCES `account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `withdraw`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `withdraw` (
  `withdraw_id` INT NOT NULL AUTO_INCREMENT,
  `withdraw_operation_id` INT NOT NULL,
  `withdraw_account_id` INT NOT NULL,
  `withdraw_card_id` INT NOT NULL,
  `withdraw_amount` DECIMAL(18,2) NOT NULL,
  `withdraw_status` TINYINT NOT NULL,
  PRIMARY KEY (`withdraw_id`),
  INDEX `fk_withdraw_card1_idx` (`withdraw_card_id` ASC),
  INDEX `fk_withdraw_operation1_idx` (`withdraw_operation_id` ASC),
  INDEX `fk_withdraw_account1_idx` (`withdraw_account_id` ASC),
  CONSTRAINT `fk_withdraw_card1`
    FOREIGN KEY (`withdraw_card_id`)
    REFERENCES `card` (`card_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_withdraw_operation1`
    FOREIGN KEY (`withdraw_operation_id`)
    REFERENCES `operation` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_withdraw_account1`
    FOREIGN KEY (`withdraw_account_id`)
    REFERENCES `account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `charge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `charge` (
  `charge_id` INT NOT NULL AUTO_INCREMENT,
  `charge_operation_id` INT NOT NULL,
  `charge_account_id` INT NOT NULL,
  `charge_type` TINYINT NOT NULL DEFAULT 1 COMMENT '1:微信2:支付宝3:平台充值',
  `charge_status` TINYINT NOT NULL DEFAULT 1,
  `charge_amount` DECIMAL(18,2) NOT NULL,
  PRIMARY KEY (`charge_id`),
  INDEX `fk_charge_operation1_idx` (`charge_operation_id` ASC),
  INDEX `fk_charge_account1_idx` (`charge_account_id` ASC),
  CONSTRAINT `fk_charge_operation1`
    FOREIGN KEY (`charge_operation_id`)
    REFERENCES `operation` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_charge_account1`
    FOREIGN KEY (`charge_account_id`)
    REFERENCES `account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `transfer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `transfer` (
  `transfer_id` INT NOT NULL AUTO_INCREMENT,
  `transfer_operation_id` INT NOT NULL,
  `transfer_out_account_id` INT NOT NULL,
  `transfer_into_account_id` INT NOT NULL,
  `transfer_type` TINYINT NOT NULL,
  `transfer_status` TINYINT NOT NULL DEFAULT 1,
  `transfer_amount` DECIMAL(18,2) NOT NULL,
  PRIMARY KEY (`transfer_id`),
  INDEX `fk_transfer_operation1_idx` (`transfer_operation_id` ASC),
  INDEX `fk_transfer_account1_idx` (`transfer_out_account_id` ASC),
  INDEX `fk_transfer_account2_idx` (`transfer_into_account_id` ASC),
  CONSTRAINT `fk_transfer_operation1`
    FOREIGN KEY (`transfer_operation_id`)
    REFERENCES `operation` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transfer_account1`
    FOREIGN KEY (`transfer_out_account_id`)
    REFERENCES `account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transfer_account2`
    FOREIGN KEY (`transfer_into_account_id`)
    REFERENCES `account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `refund`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refund` (
  `refund_id` INT NOT NULL AUTO_INCREMENT,
  `refund_operation_id` INT NOT NULL,
  `refund_charge_id` INT NOT NULL,
  `refund_amount` DECIMAL(18,2) NOT NULL,
  `refund_status` TINYINT NOT NULL,
  PRIMARY KEY (`refund_id`),
  INDEX `fk_refund_charge1_idx` (`refund_charge_id` ASC),
  INDEX `fk_refund_operation1_idx` (`refund_operation_id` ASC),
  CONSTRAINT `fk_refund_charge1`
    FOREIGN KEY (`refund_charge_id`)
    REFERENCES `charge` (`charge_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_refund_operation1`
    FOREIGN KEY (`refund_operation_id`)
    REFERENCES `operation` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


EOF;
        $this->execute($sql);

    }

    public function down()
    {
        echo "m161121_083051_init cannot be reverted.\n";

        return false;
    }

    /*
    // Use safeUp/safeDown to run migration code within a transaction
    public function safeUp()
    {
    }

    public function safeDown()
    {
    }
    */
}
